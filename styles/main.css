/* 
    Note to self: When using CSS, the last rule always wins.
    So be careful with the position of these rules.
    So make sure your media queries are placed at the bottom of 
    this file.

    Also, since we're starting off with our desktop version,
    our media queries should have "max-width" instead of "min-width"
*/

* {
    /* Adding 0 margin because otherwise spacing is added to everything */
    margin: 0;
}

html, body {
    background-color: #121212;
    color: white;
    font-family: Arial, Helvetica, sans-serif;
    box-sizing: border-box;
}

/* Do NOT add height to the containers, this will prevent them
from growing with the content inside of them.  */
#container {
}

/* Intro */

#intro {
    /* Don't put height attribute here. This is a container for background image */
}

#intro-background-image { 
    /* Location of image */
    background: url('../img/roberto-nickson-rJeuNM5ZFMI-unsplash.jpg');
    
    /* Background image is centered vertically and horizontally */
    background-position: center center;
    background-repeat: no-repeat;
    /* 
        Background image is fixed so that it doesn't move when
        the content's height is greater than the image's height 
    */
    background-attachment: fixed;
    /* Rescales background image based on container's size */
    background-size: cover;
}

#overlay {
    height: 100vh;
    background-color: #1212123f;

    /* Used for navbar, intro-title, background-credit */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /* Instead of defining multiple margins/paddings for
    intro-title and the navigation bar, we'll set the foundation
    here */
    padding-left: 2.5rem;
}

#navbar-sections {
    /* background-color: aqua; */
    position: fixed;
    height: 15vh;
}

#navbar-sections ul {
    height: 100%;
    padding: 0;
    list-style: none;

    /* Used for navigation links */
    display: flex;
    align-items: center;
}

#navbar-sections li:first-of-type {
    margin-left: 0;
}

#navbar-sections li {
    margin-left: 3.8rem;
}

#navbar-sections a {
    color: white;
    text-decoration: none;
    font-size: 1.8rem;
    font-weight: 400;
}


#hamburger {
    display: none;
}

#intro-title {
    height: 60vh;
    
    /* This is currently giving me issues. Need to figure 
    out how to handle different screen heights. */
    padding-top: 4%;
    font-weight: 400;
}

/* 
    Using ems so that I just need to add font-size to #intro-title
    in my media queries. (Except on margin-top)
*/
#intro-title p:first-of-type {
    font-size: 5.5em;
}

#intro-title p:nth-of-type(2){
    font-size: 3em;
    color: rgba(255, 255, 255, 0.801);
}

#intro-title p:nth-of-type(3){
    font-size: 1.6em;
    color: rgba(255, 255, 255, 0.801);
    margin-top: 2rem;
}

#background-credit {
    height: 10vh;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
}

#background-credit a {
    height: 1rem;
    margin-right: 1.2rem;
}

/* About */

#about {
    background-color: rebeccapurple;
    height: 100vh;
}

#main-projects {
    /* container */
}

#main-projects-first {
    background-color: violet;
}


#main-projects-second {
    background-color: sienna;
}

.project {
    height: 100vh;
}

#additional-projects {
    background-color: teal;
    height: 100vh;
}

/* Media Queries */

/* For Smaller sized computers but still no tablet so keep navbar */
@media only screen and (max-width: 883px) and (max-height: 600px){

    #intro-title {
        font-size: .8rem;
        padding-top: 8%;
    }

    #navbar-sections li {
        margin-left: 3rem;
    }

    #navbar-sections a {
        color: white;
        text-decoration: none;
        font-size: 1.6rem;
        font-weight: 400;
    }

    #intro-background-image { 
        /* Using a smaller image to improve performance */
        background: url('../img/downtown-backrgound-large.jpg');
        
        /* 
           Having the horizontal background-position property set to
           38% places the buildings right on the middle
        */
        background-position: 38% center;
        background-repeat: no-repeat;
        /* 
            Background image is fixed so that it doesn't move when
            the content's height is greater than the image's height 
        */
        background-attachment: fixed;
        /* Rescales background image based on container's size */
        background-size: cover;
    }
}

/* For tablet screen sizes */
@media only screen and (max-width: 882px) {

    #intro-background-image { 
        /* 
            Keeping this as 32% because as screen gets smaller in width the buildings 
            start shifting towards the right. Once we get to the mobile part we'll change
            this percentage
         */
        background-position: 32% center;
    }

    #navbar-sections {
        display: none;
    }

    #overlay{
        padding-left: 0;
    }

    #intro-title {
        align-self: center;
        display: flex;
        flex-direction: column;
        padding-top: 18%;
    }

    #intro-title p:nth-of-type(2){
        align-self: center;
    }

    #intro-title p:nth-of-type(3){
        align-self: center;
    }
}

/* 
    This is how I'm handling the laptops with hiDPI and mDPI for now,
    but I'm sure there's a better way to do this...
    
    min-width: sets style from that number and up
    max-width: set style from that number and below
*/
@media only screen and (min-width: 1280px) and (min-height: 800px) {

    #navbar-sections a {
        color: white;
        text-decoration: none;
        font-size: 2.2rem;
        font-weight: 400;
    }

    #intro-title {
        height: 60vh;
        
        /* This is currently giving me issues. Need to figure 
        out how to handle different screen heights. */
        padding-top: 9%;
        font-weight: 400;
        font-size: 1.3rem;
    }
}

/* 
    This might cause some issues later but I'm trying to handle cases
    where the screen size might be too tall. This might mess up
    screens for ipads (AKA width less than 800px-ish), hopefully writing the
    media-query for our smaller widths will fix this. Also, remember that 
    the style at the bottom get priority.
*/
@media only screen and (min-height: 900px) {

    #navbar-sections a {
        font-size: 2.9rem;
        font-weight: 400;
    }

    #intro-title {
        
        /* This is currently giving me issues. Need to figure 
        out how to handle different screen heights. */
        padding-top: 9%;
        font-weight: 400;
        font-size: 1.5rem;
    } 
}